name: RoboStack

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - "[kmn]*-devel*"

jobs:
  run_rviz_compilation:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Build Dependencies
      uses: mamba-org/provision-with-micromamba@v11
      with:
        environment-file: .github/robostack_env.yaml
        micromamba-version: "0.17.0"

    - name: Set up rviz Dependencies on Unix
      if: runner.os == 'Linux' || runner.os == 'macOS'
      shell: bash -l -eo pipefail {0}
      run: |
        micromamba activate test
        export PATH=$HOME/micromamba-bin:$PATH

        if [[ `uname -s` == "Linux" ]]; then
          CDT="-cos6-x86_64"
          micromamba install -y mesa-libgl-devel$CDT mesa-dri-drivers$CDT \
                                libselinux$CDT libxdamage$CDT libxxf86vm$CDT \
                                libxext$CDT libxfixes$CDT -c conda-forge
        fi

        rosdep init
        rosdep update
        rosdep install --from-paths . --ignore-src -r -y

    - name: Build rviz on Unix
      if: runner.os == 'Linux' || runner.os == 'macOS'
      shell: bash -l -eo pipefail {0}
      run: |
        export CTEST_OUTPUT_ON_FAILURE=1
        mkdir build
        cd build

        cmake .. -DCMAKE_PREFIX_PATH=$CONDA_PREFIX \
                 -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
                 -DCMAKE_BUILD_TYPE=Release \
                 -DCATKIN_SKIP_TESTING=OFF \
                 -G "Ninja"

        ninja
        ninja run_tests

    - name: Set up rviz Dependencies on Windows
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        echo "Activate environment, and use rosdep to install dependencies"
        call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate test
        rosdep init
        rosdep update
        rosdep install --from-paths . --ignore-src -r -y
    - name: Build rviz on Windows
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        echo "Remove unnecessary / colliding things from PATH"
        set "PATH=%PATH:C:\ProgramData\Chocolatey\bin;=%"
        set "PATH=%PATH:C:\Program Files (x86)\sbt\bin;=%"
        set "PATH=%PATH:C:\Rust\.cargo\bin;=%"
        set "PATH=%PATH:C:\Program Files\Git\usr\bin;=%"
        set "PATH=%PATH:C:\Program Files\Git\cmd;=%"
        set "PATH=%PATH:C:\Program Files\Git\mingw64\bin;=%"
        set "PATH=%PATH:C:\Program Files (x86)\Subversion\bin;=%"
        set "PATH=%PATH:C:\Program Files\CMake\bin;=%"
        set "PATH=%PATH:C:\Program Files\OpenSSL\bin;=%"
        set "PATH=%PATH:C:\Strawberry\c\bin;=%"
        set "PATH=%PATH:C:\Strawberry\perl\bin;=%"
        set "PATH=%PATH:C:\Strawberry\perl\site\bin;=%"
        set "PATH=%PATH:c:\tools\php;=%"
        set "PATH=%PATH:ostedtoolcache=%"
        call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate test
        mkdir build
        cd build
        SET "CTEST_OUTPUT_ON_FAILURE=1"
        cmake .. -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" ^
                 -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%\Library" ^
                 -DCMAKE_BUILD_TYPE=Release ^
                 -DCATKIN_SKIP_TESTING=OFF ^
                 -DBoost_USE_STATIC_LIBS=OFF ^
                 -G "Ninja"
        ninja
        ninja run_tests
